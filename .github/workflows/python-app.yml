# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: gifter2        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pandas pdoc3 mslib streamlit psycopg2
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Generate documentation
      run: |
        cd ${{ github.workspace }}/src ; 
        find . -name "*.html" -type f -delete ; 
        pdoc3 --html account -o ${{ github.workspace }}/src --force; 
        pdoc3 --html account_info -o ${{ github.workspace }}/src --force; 
        pdoc3 --html item -o ${{ github.workspace }}/src --force; 
        pdoc3 --html item_manager -o ${{ github.workspace }}/src --force; 
        pdoc3 --html wishlist -o ${{ github.workspace }}/src --force; 
    - name: Commit
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add ./src/*
        if ! git diff-index --quiet HEAD; then
           git commit -m "Documentation"
           git fetch origin main
           git push -f origin HEAD:main
        fi

    - name: Create Tables
      run: |
        python src/DBInit.py
    - name: Test with pytest
      run: |
        python test/item_manager_test.py
        python test/test_account_info.py
